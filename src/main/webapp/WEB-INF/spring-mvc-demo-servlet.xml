<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
    	http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop.xsd
    	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	   http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Step 3: Add support for component scanning -->
	<context:component-scan base-package="com.costin.crmapp" />

	<!-- Step 4: Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven/>

	<mvc:default-servlet-handler/>

	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Step 5: Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!--Define database dataSource/connection pool-->
	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		  destroy-method="close">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
		<property name="jdbcUrl"
				  value="jdbc:mysql://localhost:3306/web_customer_tracker?useSSL=false" />
		<property name="user" value="costin" />
		<property name="password" value="costin" />

		<property name="initialPoolSize" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="maxIdleTime" value="30000" />
	</bean>

	<!--Setup Hibernate Session factory
	de aceasta data vom folosi LocalSessionFactoryBean in loc de
	SessionFactory-->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">

		<property name="dataSource" ref="myDataSource" />
		<property name="packagesToScan" value="com.costin.crmapp.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!--Acest bean este pentru a evita tot codul pe care il scriam
	atunci cand deschideam o tranzactie si dadeam commit-->
	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven/>
	<aop:aspectj-autoproxy/>

	<!--Pentru mesage de eroare custom-->

<!--	<bean id="messageSource"-->
<!--		class="org.springframework.context.support.ResourceBundleMessageSource">-->
<!--		<property name="basenames" value="messages" />-->
<!--	</bean>-->


</beans>





